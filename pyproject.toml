[project]
name = "food-analysis-webapp"
version = "0.1.0"
description = "Application web d'analyse de données de recettes Food.com"
authors = [
    {name = "Votre Équipe", email = "votre.email@example.com"}
]
readme = "README.md"
requires-python = ">=3.10"
license = {text = "MIT"}

dependencies = [
    "streamlit>=1.39.0",
    "pandas>=2.2.0",
    "numpy>=2.1.0",
    "plotly>=5.24.0",
    "python-dotenv>=1.0.0",
    "pandas-stubs>=2.3.2.250926",
    "matplotlib>=3.10.7",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.3.0",
    "pytest-cov>=6.0.0",
    "ruff>=0.7.0",
    "mypy>=1.13.0",
    "sphinx>=8.1.0",
    "sphinx-rtd-theme>=3.0.0",
]

[dependency-groups]
dev = [
    "pytest>=8.3.0",
    "pytest-cov>=6.0.0",
    "ruff>=0.7.0",
    "mypy>=1.13.0",
    "sphinx>=8.1.0",
    "sphinx-rtd-theme>=3.0.0",
]

[tool.ruff]
line-length = 88
target-version = "py39"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
]
ignore = ["E501"]  # line too long (handled by formatter)

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
no_implicit_optional = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--cov=src/food_analysis",
    "--cov-report=html",
    "--cov-report=term-missing",
    "--verbose"
]

[tool.coverage.run]
source = ["src/food_analysis"]
omit = ["*/tests/*", "*/test_*.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
]
