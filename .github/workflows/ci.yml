name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v4
      with:
        version: "latest"

    - name: Set up Python ${{ matrix.python-version }}
      run: uv python install ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        uv venv
        uv pip install -e ".[dev]"

    - name: Lint with Ruff
      run: |
        source .venv/bin/activate
        ruff check src/ tests/

    - name: Format check with Ruff
      run: |
        source .venv/bin/activate
        ruff format --check src/ tests/

    - name: Type check with mypy
      run: |
        source .venv/bin/activate
        mypy src/ --ignore-missing-imports

    - name: Test with pytest
      run: |
        source .venv/bin/activate
        pytest --cov=src/food_analysis --cov-report=xml --cov-report=term

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        fail_ci_if_error: false

  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v4

    - name: Set up Python
      run: uv python install 3.11

    - name: Install dependencies
      run: |
        uv venv
        uv pip install -e ".[dev]"
        uv pip install bandit safety

    - name: Security check with Bandit
      run: |
        source .venv/bin/activate
        bandit -r src/ -f json -o bandit-report.json || true

    - name: Upload Bandit results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: bandit-report
        path: bandit-report.json